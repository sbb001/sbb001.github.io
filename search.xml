<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ISE中软核搭建流程记录</title>
      <link href="/2024/04/26/ISE%E4%B8%AD%E8%BD%AF%E6%A0%B8%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/04/26/ISE%E4%B8%AD%E8%BD%AF%E6%A0%B8%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>最近需要使用ISE中的软核搭建系统控制部分，特对其搭建流程进行记录。<br>1、根据系统型号创建工程<br>2、创建xmp文件，并对其进行配置，最后在project导出SDK<br><img src="/images/6.bmp"><br><img src="/images/7.bmp"><br>3、对sdk添加ucf<br>4、设置为top层并export至sdk with bitstream<br>5、搭建helloworld.c并编写<br>6、在xilinx中program FPGA<br><img src="/images/8.bmp"></p>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【QT】采用FFTW计算FFT的频谱图和MATLAB计算不一致的情况</title>
      <link href="/2024/04/24/%E9%87%87%E7%94%A8FFTW%E8%AE%A1%E7%AE%97FFT%E7%9A%84%E9%A2%91%E8%B0%B1%E5%9B%BE%E5%92%8CMATLAB%E8%AE%A1%E7%AE%97%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E6%83%85%E5%86%B5/"/>
      <url>/2024/04/24/%E9%87%87%E7%94%A8FFTW%E8%AE%A1%E7%AE%97FFT%E7%9A%84%E9%A2%91%E8%B0%B1%E5%9B%BE%E5%92%8CMATLAB%E8%AE%A1%E7%AE%97%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<h3 id="项目场景：在QT中对某段信号计算FFT，并采用QcustomPlot画出频谱图"><a href="#项目场景：在QT中对某段信号计算FFT，并采用QcustomPlot画出频谱图" class="headerlink" title="项目场景：在QT中对某段信号计算FFT，并采用QcustomPlot画出频谱图"></a>项目场景：在QT中对某段信号计算FFT，并采用QcustomPlot画出频谱图</h3><h3 id="问题描述：QT中画出的频谱图一直显示在-744Hz至744Hz的频段内，而MATLAB中FFT的结果在0-10KHz都有频率分量，出现不一致情况。"><a href="#问题描述：QT中画出的频谱图一直显示在-744Hz至744Hz的频段内，而MATLAB中FFT的结果在0-10KHz都有频率分量，出现不一致情况。" class="headerlink" title="问题描述：QT中画出的频谱图一直显示在-744Hz至744Hz的频段内，而MATLAB中FFT的结果在0-10KHz都有频率分量，出现不一致情况。"></a>问题描述：QT中画出的频谱图一直显示在-744Hz至744Hz的频段内，而MATLAB中FFT的结果在0-10KHz都有频率分量，出现不一致情况。</h3><p>1、QT输出FFT频谱图<br><img src="/images/3.jpg"><br>2、MATLAB输出FFT频谱图<br><img src="/images/4.jpg"><br>原因分析：第一反应是QT中引用FFTW函数计算FFT出现错误，开始详细排查。</p><h3 id="解决方案：通过参考一些网上的demo，发现代码本身没有问题。"><a href="#解决方案：通过参考一些网上的demo，发现代码本身没有问题。" class="headerlink" title="解决方案：通过参考一些网上的demo，发现代码本身没有问题。"></a>解决方案：通过参考一些网上的demo，发现代码本身没有问题。</h3><p>1、排除FFTW计算的问题。与MATLAB计算的结果进行了比较,发现二者输出的结果是一致的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//FFTW计算FFT</span><br><span class="line"> void FFT(double *y,int N,double *FFT)&#123;</span><br><span class="line">   fftw_complex *<span class="keyword">in</span> = NULL;</span><br><span class="line">   fftw_complex *out = NULL;</span><br><span class="line">   fftw_plan p;</span><br><span class="line">   //分配内存空间</span><br><span class="line">   <span class="keyword">in</span> = (fftw_complex *)fftw_malloc(sizeof(fftw_complex) * N);</span><br><span class="line">   out = (fftw_complex *)fftw_malloc(sizeof(fftw_complex) * N);</span><br><span class="line">   // 创建句柄</span><br><span class="line">   p = fftw_plan_dft_1d(N, <span class="keyword">in</span>, out, FFTW_FORWARD, FFTW_ESTIMATE);</span><br><span class="line">   // 输入</span><br><span class="line">   <span class="keyword">for</span> (int i=0; i&lt;N; i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">in</span>[i][0] = y[i];</span><br><span class="line">       <span class="keyword">in</span>[i][1] = 0;</span><br><span class="line">   &#125; </span><br><span class="line">   //执行</span><br><span class="line">   fftw_execute(p);</span><br><span class="line">   fftw_destroy_plan(p);</span><br><span class="line">   // 输出</span><br><span class="line">   <span class="keyword">for</span> (int i=0; i&lt;N; i++)</span><br><span class="line">   &#123;</span><br><span class="line">    FFT[i]= sqrt((out[i][<span class="number">0</span>])*(out[i][<span class="number">0</span>])+(out[i][<span class="number">1</span>])*(out[i][<span class="number">1</span>]));</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   fftw_free(<span class="keyword">in</span>);</span><br><span class="line">   fftw_free(out);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、进一步判断是否为QT绘制频谱图的问题。需要将下列横轴的计算公式做一定的调整，结果输出才是正常的，不知道为啥会有这么一个bug的出现，终归是解决了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//修改前的代码</span><br><span class="line">   QVector&lt;double&gt; x(N/2), y(N/2);</span><br><span class="line">   <span class="keyword">for</span> (int i=0; i&lt; N/2; i++)</span><br><span class="line">   &#123;</span><br><span class="line">     x[i]=i*handlex2.fs/N;</span><br><span class="line">     y[i]=FFT[i];  //y</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"> //修改后的代码</span><br><span class="line">  QVector&lt;double&gt; x(N/2), y(N/2);</span><br><span class="line">   <span class="keyword">for</span> (int i=0; i&lt; N/2; i++)</span><br><span class="line">   &#123;</span><br><span class="line">     x[i]=i;</span><br><span class="line">     x[i]=x[i]*handlex2.fs/N;</span><br><span class="line">     y[i]=FFT[i];  //y</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>3、正常输出，且与MATLAB结果一致，问题得到解决。<br><img src="/images/5.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Debug记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
            <tag> 音频信号处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【DOA】一维长短基线干涉仪测向算法</title>
      <link href="/2024/04/24/%E4%B8%80%E7%BB%B4%E9%95%BF%E7%9F%AD%E5%9F%BA%E7%BA%BF%E5%B9%B2%E6%B6%89%E4%BB%AA%E6%B5%8B%E5%90%91%E7%AE%97%E6%B3%95/"/>
      <url>/2024/04/24/%E4%B8%80%E7%BB%B4%E9%95%BF%E7%9F%AD%E5%9F%BA%E7%BA%BF%E5%B9%B2%E6%B6%89%E4%BB%AA%E6%B5%8B%E5%90%91%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一维长短基线干涉仪测向算法"><a href="#一维长短基线干涉仪测向算法" class="headerlink" title="一维长短基线干涉仪测向算法"></a>一维长短基线干涉仪测向算法</h2><p>本节介绍一种采用一维长短基线法测DOA的算法，供大家参考学习。<br>相关原理详情请参考作者之前发表在CSDN博客中的内容<a href="https://blog.csdn.net/weixin_44924810/article/details/134849275?spm=1001.2014.3001.5502">详情</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">%%线阵测DOA</span><br><span class="line">clc;</span><br><span class="line">clear all;</span><br><span class="line">close all;</span><br><span class="line">%% 雷达信号参数</span><br><span class="line">c= 3e8;</span><br><span class="line">radar_f = 50e6;%频率</span><br><span class="line">lamda = c/radar_f;%波长</span><br><span class="line">radar_theta = 60*2*pi/360;%入射角</span><br><span class="line">pw = 0.5e-6;%脉宽</span><br><span class="line">%% 干涉仪参数</span><br><span class="line">d1= 2;</span><br><span class="line">d2=30;</span><br><span class="line">fs=500e6;</span><br><span class="line">t=0:1/fs:pw-1/fs;</span><br><span class="line">%% 距离差求取时延差</span><br><span class="line">tau1=d1*sin(radar_theta)/c;</span><br><span class="line">tau2=d2*sin(radar_theta)/c;</span><br><span class="line">%% 到达三个天线的信号</span><br><span class="line">x1=exp(1i*2*pi*radar_f*t);</span><br><span class="line">x2=exp(1i*2*pi*radar_f*(t-tau1));</span><br><span class="line">x3=exp(1i*2*pi*radar_f*(t-tau2));</span><br><span class="line">% %% 天线间的相位差</span><br><span class="line">diffPhase1 = mean(angle(x1.*conj(x2)));%%获取1，2号天线的相位差，保证无模糊</span><br><span class="line">diffPhase2 = mean(angle(x1.*conj(x3)));%%获取1，3号天线的相位差，保证精确估计DOA</span><br><span class="line">%% DOA估计</span><br><span class="line">%求取k</span><br><span class="line">k = (d2*diffPhase1/d1 -diffPhase2)/(2*pi);</span><br><span class="line">C1 = lamda*(diffPhase2+k*2*pi)/(2*pi*d2);</span><br><span class="line">theta = asin(C1)*360/(2*pi);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> DOA估计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【QT】将处理后的音频文件保存到本地</title>
      <link href="/2024/04/24/%E5%B0%86%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E6%9C%AC%E5%9C%B0/"/>
      <url>/2024/04/24/%E5%B0%86%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>输出音频文件到本地常常基于MATLAB环境进行处理，且仅需一行代码就可以解决，最近准备将QT处理过后的音频文件输出到本地，通过查阅相关资料，问题得到解决。本文基于MATLAB和QT两种环境，对于如何将音频文件输出至本地路径进行了详细介绍。</p><h3 id="一、MATLAB环境"><a href="#一、MATLAB环境" class="headerlink" title="一、MATLAB环境"></a>一、MATLAB环境</h3><p>MATLAB环境下，仅需要audiowrite函数即可完成音频文件的输出，一行代码，非常简便。<br>代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//filename为保存文件的名字，如<span class="string">&quot;audio.wav&quot;</span></span><br><span class="line">//y为需要保存的变量</span><br><span class="line">//fs为采样率</span><br><span class="line">audiowrite(filename,y,fs);</span><br></pre></td></tr></table></figure><h3 id="二、QT环境"><a href="#二、QT环境" class="headerlink" title="二、QT环境"></a>二、QT环境</h3><p>1.定义函数<br>代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//形参分别为文件名、数据、采用率、数据点数</span><br><span class="line">void write_audio(const char* filename, double* data, int sampleRate, int numSamples)</span><br><span class="line">&#123;</span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">        qDebug() &lt;&lt; <span class="string">&quot;Failed to open file for writing: &quot;</span> &lt;&lt; <span class="string">filename;</span></span><br><span class="line"><span class="string">        return;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    int numChannels = 1; </span></span><br><span class="line"><span class="string">    int bitsPerSample = 16;</span></span><br><span class="line"><span class="string">    int bytesPerSample = bitsPerSample / 8;</span></span><br><span class="line"><span class="string">    int dataSize = numSamples * numChannels * bytesPerSample;</span></span><br><span class="line"><span class="string">    int totalSize = dataSize + 44;</span></span><br><span class="line"><span class="string">    fwrite(&quot;RIFF&quot;, 4, 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&amp;totalSize, sizeof(int), 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&quot;WAVE&quot;, 4, 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&quot;fmt &quot;, 4, 1, file);</span></span><br><span class="line"><span class="string">    int fmtSize = 16;</span></span><br><span class="line"><span class="string">    fwrite(&amp;fmtSize, sizeof(int), 1, file);</span></span><br><span class="line"><span class="string">    short audioFormat = 1;</span></span><br><span class="line"><span class="string">    fwrite(&amp;audioFormat, sizeof(short), 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&amp;numChannels, sizeof(short), 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&amp;sampleRate, sizeof(int), 1, file);</span></span><br><span class="line"><span class="string">    int byteRate = sampleRate * numChannels * bytesPerSample;</span></span><br><span class="line"><span class="string">    fwrite(&amp;byteRate, sizeof(int), 1, file);</span></span><br><span class="line"><span class="string">    short blockAlign = numChannels * bytesPerSample;</span></span><br><span class="line"><span class="string">    fwrite(&amp;blockAlign, sizeof(short), 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&amp;bitsPerSample, sizeof(short), 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&quot;data&quot;, 4, 1, file);</span></span><br><span class="line"><span class="string">    fwrite(&amp;dataSize, sizeof(int), 1, file);</span></span><br><span class="line"><span class="string">    for (int i = 0; i &lt; numSamples; i++) &#123;</span></span><br><span class="line"><span class="string">        short sample = (short)(data[i] * 32767.0);</span></span><br><span class="line"><span class="string">        fwrite(&amp;sample, sizeof(short), 1, file);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    fclose(file);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>2.调用函数<br>代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QString filename = QFileDialog::getSaveFileName(this, <span class="string">&quot;Save Audio File&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;WAV file (*.wav)&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span> (filename.isEmpty()) &#123;</span><br><span class="line">             <span class="built_in">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">write_audio(filename.toStdString().c_str(), data, sampleRate, numSamples);</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过上述方法，即可完成对于音频文件的输出，供诸位进行参考！</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
            <tag> 音频信号处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MATLAB】设计CIC抽取/插值滤波器报错问题</title>
      <link href="/2024/04/24/%E8%AE%BE%E8%AE%A1CIC%E6%8A%BD%E5%8F%96%E6%8F%92%E5%80%BC%E6%BB%A4%E6%B3%A2%E5%99%A8%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
      <url>/2024/04/24/%E8%AE%BE%E8%AE%A1CIC%E6%8A%BD%E5%8F%96%E6%8F%92%E5%80%BC%E6%BB%A4%E6%B3%A2%E5%99%A8%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在设计CIC抽取滤波器时，需要导入FilterDesigner工具设计，但老出现“The fixed-point designer must be available to construct an mfilt.cicdecim filter.”这个报错问题，一直没有解决，怀疑是否为自己的Matlab版本问题，比较了小伙伴的同版本CIC设计滤波器，能够正常使用，没有出现报错。</p><p>偶然间发现自己的版本缺少定点运算的工具，因此下载安装了Fixed-Point Designer工具后恢复正常，能够正常设计CIC滤波器。<br><img src="/images/1.jpg"><br>小伙伴们要是遇到同样问题，可以先点击图片示例这块进行查看，如果缺少定点模块，那肯定是需要下载这个工具了，安装后，即可正常使用。<br><img src="/images/2.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Debug记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> CIC抽取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Python】pip install librosa失败的解决方案</title>
      <link href="/2024/04/24/pip-install-librosa%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2024/04/24/pip-install-librosa%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>最近使用python需要librosa安装包，结果老是装不上，试用了网上很多种方案，依旧没有成功，最后试着将python解释器降级，再尝试pip install librosa安装成功。</p>]]></content>
      
      
      <categories>
          
          <category> Debug记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【QT】使用QCustomPlot函数输出2个波形时，某个坐标轴波形不显示的问题</title>
      <link href="/2024/04/24/%E4%BD%BF%E7%94%A8QCustomPlot%E5%87%BD%E6%95%B0%E8%BE%93%E5%87%BA2%E4%B8%AA%E6%B3%A2%E5%BD%A2%E6%97%B6%EF%BC%8C%E6%9F%90%E4%B8%AA%E5%9D%90%E6%A0%87%E8%BD%B4%E6%B3%A2%E5%BD%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2024/04/24/%E4%BD%BF%E7%94%A8QCustomPlot%E5%87%BD%E6%95%B0%E8%BE%93%E5%87%BA2%E4%B8%AA%E6%B3%A2%E5%BD%A2%E6%97%B6%EF%BC%8C%E6%9F%90%E4%B8%AA%E5%9D%90%E6%A0%87%E8%BD%B4%E6%B3%A2%E5%BD%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>前段时间在使用QCustomPlot函数对所需要显示的波形进行输出时，遇到一个非常棘手的问题，那就是当我输出两个波形时，只显示了一个波形。搞笑的是，需要拖动一下不显示波形的界面，这个波形才能显示，表明我的程序是没有问题的。<br>今天偶然之间，给波形添加了label，波形竟然神奇般的自己显示了出来，不需要自己拖动了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">qDebug()&lt;&lt;<span class="string">&quot;BEGIN PLOT&quot;</span>;</span><br><span class="line">ui-&gt;customPlot-&gt;addGraph();</span><br><span class="line">ui-&gt;customPlot-&gt;graph(0)-&gt;setData(x,y);</span><br><span class="line">ui-&gt;customPlot-&gt;xAxis-&gt;setLabel(<span class="string">&quot;时间/s&quot;</span>);</span><br><span class="line">ui-&gt;customPlot-&gt;graph(0)-&gt;rescaleAxes();</span><br><span class="line">ui-&gt;customPlot-&gt;xAxis-&gt;setRange(0, 6);</span><br><span class="line">ui-&gt;customPlot-&gt;setInteractions(QCP::iRangeDrag | QCP::iRangeZoom);</span><br><span class="line">ui-&gt;customPlot-&gt;replot();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Debug记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【QT】出现“command aborted”时的解决方案</title>
      <link href="/2024/04/24/%E5%87%BA%E7%8E%B0%E2%80%9Ccommand-aborted%E2%80%9D%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2024/04/24/%E5%87%BA%E7%8E%B0%E2%80%9Ccommand-aborted%E2%80%9D%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>尝试了网上的删除C:\Users\Administrator\AppData\Roaming\QtProject文件夹并重启的方法，依然没有作用，最后只能重新安装软件，问题得到解决！</p><p>tips：重新下载安装包时，发现我这个5.12.11版本在镜像中没有，而官网下载又很慢，将其下载链接添加到迅雷中进行下载，速度得到了很大的提升，非常推荐朋友们试试！</p>]]></content>
      
      
      <categories>
          
          <category> Debug记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在开始</title>
      <link href="/2024/04/24/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A7%8B/"/>
      <url>/2024/04/24/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<p>今天正式开始我的博客之旅，将对日常学习、工作、生活中的一些内容进行记录，以供自己查阅！</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/24/hello-world/"/>
      <url>/2024/04/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
